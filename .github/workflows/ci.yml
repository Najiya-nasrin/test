name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE_NAME: card-validation-app

jobs:
  test:
    runs-on: ubuntu-latest
    name: Build and Test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build test image
      run: |
        docker build --target test -t card-validation-tests .
        
    - name: Extract test results
      if: always()
      run: |
        # Create container and copy test results
        docker create --name test-container card-validation-tests
        docker cp test-container:/app/test-results ./test-results || echo "No test results found"
        docker rm test-container
        
        # List test results for debugging
        ls -la test-results/ || echo "Test results directory not found"
        
    - name: Display test summary
      if: always()
      run: |
        echo "=== Unit Test Results ==="
        if [ -f "test-results/unit-tests.trx" ]; then
          echo "Unit tests completed"
        else
          echo "Unit test results not found"
        fi
        
        echo "=== Integration Test Results ==="
        if [ -f "test-results/integration-tests.trx" ]; then
          echo "Integration tests completed"
        else
          echo "Integration test results not found"
        fi
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-results/
        if-no-files-found: warn
        
    - name: Build production image
      if: success()
      run: |
        docker build --target runtime -t ${{ env.DOCKER_IMAGE_NAME }} .
        
    - name: Login to Docker Hub
      if: success() && github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Push to Docker Hub
      if: success() && github.ref == 'refs/heads/main'
      run: |
        docker tag ${{ env.DOCKER_IMAGE_NAME }} ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
        docker tag ${{ env.DOCKER_IMAGE_NAME }} ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}